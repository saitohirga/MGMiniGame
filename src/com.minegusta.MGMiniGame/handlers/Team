package com.minegusta.MGMiniGame.handlers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import net.md_5.bungee.api.ChatColor;

import org.bukkit.Location;
import org.bukkit.entity.Player;
import org.bukkit.util.permissions.BroadcastPermissions;

import com.minegusta.MGMiniGame.utils.ChatUtils;

public class Team 
{
	
	private static List<Team> allTeams = new ArrayList<Team>();
	private static List<Team> activeTeams = new ArrayList<Team>();
	
	private List<String> members = new ArrayList<String>();
	
	private static HashMap<String, Team> playerTeams = new HashMap <String, Team>();
	
	private String teamName;
	
	private Location spawn;
	
	public Team(String teamName, Location spawn)
	{
		this.teamName = teamName.trim();
		allTeams.add(this);
		this.spawn = spawn;
		
		activeTeams.add(this);
	}
	
	public String getName()
	{
		return teamName;
	}
	
	public Location getSpawn()
	{
		return spawn;
	}
	
	public void add(Player player)
	{
		playerTeams.put(player.getName(), this);
		members.add(player.getName());
	}
	
	public boolean remove(Player player)
	{
		if(!hasTeam(player))
		{
			return false;
		}else
		{
			playerTeams.remove(player.getName());
			
			members.remove(player.getName());
			
			if(members.isEmpty())
			{
				activeTeams.remove(this);
				ChatUtils.broadcast(ChatColor.BLUE + "There are no more members left on the " + getName() + " team!!");
			}
			
			if(activeTeams.size() == 1)
			{
				Game.stop(activeTeams.get(0));
			}
			
			return true;
		}
	}
	
	public static boolean hasTeam(Player player)
	{
		return playerTeams.containsKey(player.getName());
	}
	
	public static Team getTeam(Player player){
		if(!hasTeam(player))
		{
			return null;
		}else
		{
			return playerTeams.get(player.getName());
		}
	}
	
	public static Team getTeam(String name)
	{
		for(Team t : allTeams)
			if(t.getName().equalsIgnoreCase(name))
				return t;
		return null;
	}
	public static List<Team> getAllTeams()
	{
		return allTeams;
	}
}
